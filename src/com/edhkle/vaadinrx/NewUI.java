package com.edhkle.vaadinrx;

import java.util.Collection;
import java.util.logging.Level;
import java.util.logging.Logger;

import com.edhkle.pocketrx.controller.Pharmacist;
import com.edhkle.pocketrx.model.Pill;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.event.ItemClickEvent.ItemClickListener;
import com.vaadin.server.ThemeResource;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Window;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import java.util.LinkedList;

public class NewUI extends CustomComponent {

    final static Logger log = Logger.getLogger(NewUI.class.getName());
    String JDBC_URL = "jdbc:mysql://pillbox:p1llb0x@localhost:3306/pillbox?zeroDateTime=convertToNull";
    Pharmacist p = Pharmacist.getPharmacist(JDBC_URL);

    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
    private static final long serialVersionUID = 1L;
    private VerticalLayout searchLayout;

    // Search Window
    private Panel searchWindow;
    private TextField txtImprint;
    private OptionGroup andOr;
    private TextField txtKeywords;
    // Results Window
    private Panel resultsWindow;
    private Table resultsTable;
    
    BeanItemContainer<Pill> pillBeans = new BeanItemContainer<Pill>(Pill.class);

    /**
     * The constructor should first build the main layout, set the composition
     * root and then do any custom initialization.
     *
     * The constructor will not be automatically regenerated by the visual
     * editor.
     */
    public NewUI() {
        VerticalLayout root = new VerticalLayout();
        setCompositionRoot(root);
        root.addComponent(buildSearchPanel());
        root.addComponent(buildResultsPanel());
        updateResultsPanel(new LinkedList<Pill>());
    }

    private Panel buildSearchPanel() {
        // Vertical Layout
        log.info("Creating new panel...");
        Panel mContent = new Panel();
        VerticalLayout vLayout = new VerticalLayout();
        vLayout.setWidth("100.0%");
        log.info("Created new panel: " + mContent.toString());
        // Vertical Component #1: Header Layout w/header
        HorizontalLayout header = new HorizontalLayout();
        header.setImmediate(false);
        header.setMargin(true);
        header.setSpacing(true);
        header.setCaption("Search Criteria");
        header.setStyleName("padding-left: 10px;");
        header.setIcon(new ThemeResource("../images/pill.png"));
        log.info("Created Horiz Layout (header): icon=" + header.getIcon().toString());
        header.addComponent(new Embedded("", new ThemeResource("../images/white_pill.jpg")));
        Label headerLabel = new Label("<h1>Pill Identifier</h1>");
        headerLabel.setContentMode(ContentMode.HTML);
        headerLabel.addStyleName("v-header-style");
        header.addComponent(headerLabel);
        header.setComponentAlignment(headerLabel, Alignment.MIDDLE_CENTER);
        log.info("Added headerLabel=" + headerLabel.getCaption() + " to header=" + header.toString());
        vLayout.addComponent(header);
        log.info("Added header=" + header.toString() + " to vLayout=" + vLayout.toString());

            // Vertical Component #2: Search Criteria w/Search Button
        // Setup Section
        HorizontalLayout searchSection = new HorizontalLayout();
        searchSection.setImmediate(false);
        searchSection.setMargin(true);
        searchSection.setSpacing(true);
        // Add Components to Search Section
        txtImprint = new TextField("Imprint(s)");
        txtImprint.setInputPrompt("imprint");
        txtImprint.setMaxLength(64);
        searchSection.addComponent(txtImprint);

        andOr = new OptionGroup();
        andOr.addItem("AND");
        andOr.addItem("OR");
        andOr.setValue("OR");
        searchSection.addComponent(andOr);

        txtKeywords = new TextField("Keywords");
        txtKeywords.setInputPrompt("keywords");
        txtKeywords.setMaxLength(128);
        searchSection.addComponent(txtKeywords);

        Button searchButton = new Button("Search");
        searchButton.addClickListener(new Button.ClickListener() {

            @Override
            public void buttonClick(Button.ClickEvent event) {
                log.info("Search for RX with criteria: imprint='"
                        + txtImprint.getValue()
                        + "' andOr=" + andOr.getValue().toString()
                        + " keywords='" + txtKeywords.getValue() + "'");

                try {
                    Collection<Pill> pills
                            = p.getPillsWithImprint(txtImprint.getValue());
                    updateResultsPanel(pills);
                } catch (Exception e) {
                    VaadinRxUI.showError(e);
                    log.log(Level.SEVERE, e.getClass().getName() + ": " + e.getMessage(), (Exception) e);
                }
            }
        });
        searchSection.addComponent(searchButton);
        searchSection.setComponentAlignment(searchButton, Alignment.MIDDLE_RIGHT);
        vLayout.addComponent(searchSection);
        mContent.setContent(vLayout);
        return mContent;
    }

    private Panel buildResultsPanel() {
        Panel resultsPanel = new Panel();
        VerticalLayout vLayout = new VerticalLayout();
        vLayout.setWidth("100%");
        resultsPanel.setContent(vLayout);
        vLayout.setIcon(new ThemeResource("images/pill-3-32.png"));
        resultsTable = new Table("Search Results");
        resultsTable.setIcon(new ThemeResource("../images/pills-3-32.png"));
        //resultsTable.setSizeUndefined();
        resultsTable.setWidth("100%");
        resultsTable.setContainerDataSource(pillBeans);        
        resultsTable.setColumnHeader("medicineName", "Medicine");
        resultsTable.setColumnHeader("SPLimprint", "Imprint");
        resultsTable.setColumnHeader("rxString", "Description");
        resultsTable.setColumnHeader("author", "Company");
        resultsTable.addItemClickListener(new ItemClickListener() {

            @Override
            public void itemClick(ItemClickEvent event) {
                if (event.getItemId() != null) {
                    log.info("TableItem selected -- Item: \n" + event.getItemId().toString());
                    if (event.getItemId() instanceof Pill) {
                        Pill pill = (Pill) event.getItemId();
                        final Window pillDialog = new Window(pill.getMedicineName() + " information");
                        pillDialog.setContent(new PillWindowComponent(pill, pillDialog));
                        pillDialog.setModal(true);
                        getUI().addWindow(pillDialog);
                    }
                } else {
                    log.info("TableItem selected -- NULL");
                }
            }
        });
        resultsTable.setVisibleColumns(new Object[]{"medicineName", "SPLimprint", "rxString", "author"});
        vLayout.addComponent(resultsTable);
        resultsPanel.setContent(vLayout);
        return resultsPanel;
    }

    protected void updateResultsPanel(Collection<Pill> pills) {
	//pillBeans.addContainerProperty("iconPath", Resource.class, new ThemeResource("../images/thumbnails/no_pill.jpg"));
        pillBeans.removeAllItems();
        pillBeans.addAll(pills);
        resultsTable.setPageLength((pillBeans.size() > 10) ? 10 : pillBeans.size());
    }
}
