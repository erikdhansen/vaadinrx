package com.edhkle.vaadinrx;

import com.edhkle.pocketrx.model.Pill;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.ExternalResource;
import com.vaadin.server.ThemeResource;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Link;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Window;

public class PillWindowComponent extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_5;
	@AutoGenerated
	private Button btnClosePillWindow;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_4;
	@AutoGenerated
	private Label author;
	@AutoGenerated
	private Label label_9;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_3;
	@AutoGenerated
	private Label rxcui;
	@AutoGenerated
	private Label label_6;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;
	@AutoGenerated
	private Label actives;
	@AutoGenerated
	private Label label_4;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private Label rxInfo;
	@AutoGenerated
	private Label label_1;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_6;
	@AutoGenerated
	private Label imprints;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_8;
	@AutoGenerated
	private Link wikiLink;
	@AutoGenerated
	private Embedded pillImage;
	Pill p;
	
	private Window myWindow;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public PillWindowComponent(Pill p, Window myWindow) {
		this.myWindow = myWindow;
		this.p = p;
		buildMainLayout();
		setCompositionRoot(mainLayout);		
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("600px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("600px");
		setHeight("-1px");
		
		// horizontalLayout_8
		horizontalLayout_8 = buildHorizontalLayout_8();
		mainLayout.addComponent(horizontalLayout_8);
		mainLayout.setComponentAlignment(horizontalLayout_8, new Alignment(48));
		
		// horizontalLayout_6
		horizontalLayout_6 = buildHorizontalLayout_6();
		mainLayout.addComponent(horizontalLayout_6);
		mainLayout.setComponentAlignment(horizontalLayout_6, new Alignment(48));
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);
		mainLayout.setComponentAlignment(horizontalLayout_1, new Alignment(48));
		
		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		mainLayout.addComponent(horizontalLayout_2);
		mainLayout.setComponentAlignment(horizontalLayout_2, new Alignment(48));
		
		// horizontalLayout_3
		horizontalLayout_3 = buildHorizontalLayout_3();
		mainLayout.addComponent(horizontalLayout_3);
		mainLayout.setComponentAlignment(horizontalLayout_3, new Alignment(48));
		
		// horizontalLayout_4
		horizontalLayout_4 = buildHorizontalLayout_4();
		mainLayout.addComponent(horizontalLayout_4);
		mainLayout.setComponentAlignment(horizontalLayout_4, new Alignment(48));
		
		// horizontalLayout_5
		horizontalLayout_5 = buildHorizontalLayout_5();
		mainLayout.addComponent(horizontalLayout_5);
		mainLayout.setComponentAlignment(horizontalLayout_5, Alignment.MIDDLE_RIGHT);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_8() {
		// common part: create layout
		horizontalLayout_8 = new HorizontalLayout();
		horizontalLayout_8.setImmediate(false);
		horizontalLayout_8.setWidth("100.0%");
		horizontalLayout_8.setHeight("-1px");
		horizontalLayout_8.setMargin(true);
		horizontalLayout_8.setSpacing(true);
		
		// pillImage
		pillImage = new Embedded();
		pillImage.setImmediate(false);
		pillImage.setWidth("128px");
		pillImage.setHeight("128px");
		pillImage.setSource(new ThemeResource(p.getIconPath()));
		pillImage.setType(1);
		pillImage.setDescription(p.getIconPath());
		horizontalLayout_8.addComponent(pillImage);
		
		// wikiLink
		wikiLink = new Link(p.getRxString(), new ExternalResource("http://en.wikipedia.org/wiki/" + p.getMedicineName()));
		wikiLink.setDescription("View " + p.getMedicineName() + " on Wikipedia");
		wikiLink.setImmediate(false);
		wikiLink.setWidth("-1px");
		wikiLink.setHeight("-1px");
		horizontalLayout_8.addComponent(wikiLink);
		horizontalLayout_8.setComponentAlignment(wikiLink, new Alignment(48));
		
		return horizontalLayout_8;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_6() {
		// common part: create layout
		horizontalLayout_6 = new HorizontalLayout();
		horizontalLayout_6.setImmediate(false);
		horizontalLayout_6.setWidth("100.0%");
		horizontalLayout_6.setHeight("-1px");
		horizontalLayout_6.setMargin(true);
		horizontalLayout_6.setSpacing(true);
		
		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("Imprint(s)");
		horizontalLayout_6.addComponent(label_2);
		horizontalLayout_6.setComponentAlignment(label_2, new Alignment(33));
		
		// imprints
		imprints = new Label();
		imprints.setImmediate(false);
		imprints.setWidth("-1px");
		imprints.setHeight("-1px");
		StringBuilder sb = new StringBuilder();
		for(String s : p.getSPLimprint().split(";")) {
			sb.append(s).append(" ");
		}
		imprints.setValue(sb.toString());		
		horizontalLayout_6.addComponent(imprints);
		horizontalLayout_6.setComponentAlignment(imprints, new Alignment(34));
		
		return horizontalLayout_6;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(true);
		horizontalLayout_1.setSpacing(true);
		
		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("RX Information");
		horizontalLayout_1.addComponent(label_1);
		
		// rxInfo
		rxInfo = new Label();
		rxInfo.setImmediate(false);
		rxInfo.setWidth("-1px");
		rxInfo.setHeight("-1px");
		rxInfo.setValue(p.getMedicineName());
		horizontalLayout_1.addComponent(rxInfo);
		horizontalLayout_1.setComponentAlignment(rxInfo, new Alignment(34));
		
		return horizontalLayout_1;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("100.0%");
		horizontalLayout_2.setHeight("-1px");
		horizontalLayout_2.setMargin(true);
		horizontalLayout_2.setSpacing(true);
		
		// label_4
		label_4 = new Label();
		label_4.setImmediate(false);
		label_4.setWidth("-1px");
		label_4.setHeight("-1px");
		label_4.setValue("Ingredient(s)");
		horizontalLayout_2.addComponent(label_4);
		horizontalLayout_2.setComponentAlignment(label_4, new Alignment(33));
		
		// actives
		actives = new Label();
		actives.setImmediate(false);
		actives.setWidth("-1px");
		actives.setHeight("-1px");
		actives.setValue(p.getIngredients().replaceAll(";", "\n"));
		StringBuilder sb = new StringBuilder("<ul><h2>Inactive</h2><br/>");
		for(String s : p.getSPLinactiveIngredients().split(" / ")) {
			sb.append("<li>").append(s).append("</li><br/>");
		}
		sb.append("</ul>");
		actives.setValue(p.getIngredients());
		actives.setContentMode(ContentMode.HTML);		
		actives.setDescription(sb.toString());
		horizontalLayout_2.addComponent(actives);
		horizontalLayout_2.setComponentAlignment(actives, new Alignment(34));
		
		return horizontalLayout_2;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_3() {
		// common part: create layout
		horizontalLayout_3 = new HorizontalLayout();
		horizontalLayout_3.setImmediate(false);
		horizontalLayout_3.setWidth("100.0%");
		horizontalLayout_3.setHeight("-1px");
		horizontalLayout_3.setMargin(true);
		horizontalLayout_3.setSpacing(true);
		
		// label_6
		label_6 = new Label();
		label_6.setImmediate(false);
		label_6.setWidth("-1px");
		label_6.setHeight("-1px");
		label_6.setValue("Drug Family");
		horizontalLayout_3.addComponent(label_6);
		horizontalLayout_3.setComponentAlignment(label_6, new Alignment(33));
		
		// inactives
		rxcui = new Label();
		rxcui.setImmediate(false);
		rxcui.setWidth("-1px");
		rxcui.setHeight("-1px");
		rxcui.setValue(p.getSPLstrength());
		rxcui.setDescription("RxCUI: " + p.getRxCui());

		horizontalLayout_3.addComponent(rxcui);
		horizontalLayout_3.setComponentAlignment(rxcui, new Alignment(34));
		
		return horizontalLayout_3;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_4() {
		// common part: create layout
		horizontalLayout_4 = new HorizontalLayout();
		horizontalLayout_4.setImmediate(false);
		horizontalLayout_4.setWidth("100.0%");
		horizontalLayout_4.setHeight("-1px");
		horizontalLayout_4.setMargin(true);
		horizontalLayout_4.setSpacing(true);
		
		// label_9
		label_9 = new Label();
		label_9.setImmediate(false);
		label_9.setWidth("-1px");
		label_9.setHeight("-1px");
		label_9.setValue("Author");
		horizontalLayout_4.addComponent(label_9);
		horizontalLayout_4.setComponentAlignment(label_9, new Alignment(33));
		
		// author
		author = new Label();
		author.setImmediate(false);
		author.setWidth("-1px");
		author.setHeight("-1px");
		author.setValue(p.getAuthor());
		horizontalLayout_4.addComponent(author);
		horizontalLayout_4.setComponentAlignment(author, new Alignment(34));
		
		return horizontalLayout_4;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_5() {
		// common part: create layout
		horizontalLayout_5 = new HorizontalLayout();
		horizontalLayout_5.setImmediate(false);
		horizontalLayout_5.setWidth("100.0%");
		horizontalLayout_5.setHeight("-1px");
		horizontalLayout_5.setMargin(false);
		
		// btnClosePillWindow
		btnClosePillWindow = new Button();
		btnClosePillWindow.setCaption("Close");
		btnClosePillWindow.setImmediate(true);
		btnClosePillWindow.setWidth("-1px");
		btnClosePillWindow.setHeight("-1px");
		horizontalLayout_5.addComponent(btnClosePillWindow);
		horizontalLayout_5.setComponentAlignment(btnClosePillWindow, Alignment.MIDDLE_RIGHT);
		btnClosePillWindow.addClickListener(new Button.ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				myWindow.close();
			}
		});
		return horizontalLayout_5;
	}

}
